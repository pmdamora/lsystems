function [] = LsysDraw(delta, lsys, len)
    % Now draw the string as turtle graphics
    %Upper case (e.g. F or G) causes a line to be drawn in the current direction of the turtle
    %Lower case causes a move with no draw
    %angle +operator means turn left; -operator means turn right

    %Init the turtle
    T.x = 0;
    T.y = 0;
    T.angle = 0;
    T.dangle = delta*pi/180; %convert degrees to radians
    
    
    %init the turtle stack
    stkPtr = 1;

    hold on

    multiplier = 1;
    readingDigit = FALSE;
    
    for i=1:length(lsys)
        cmdT = lsys(i);
        
        if isstrprop(lsys(i),'digit') && ~readingDigit 
            k = i + 1;
            number = lsys(i);
            while isstrprop(lsys(k),'digit')
                number = strcat(number,lsys(k));
                k = k + 1;
            end
            if strcmp(lsys(k), '+') || strcmp(lsys(k), '-')
                multiplier = str2double(number);
            end
            %i = k;
            continue
        end
        switch cmdT
        case 'F'
            newxT = T.x + len.F*cos(T.angle);
            newyT = T.y + len.F*sin(T.angle);
            line([T.y newyT], [T.x newxT],'color',[.3 .3 0], 'linewidth',2);
            T.x = newxT;
            T.y = newyT;
        case 'G'
            newxT = T.x + len.G*cos(T.angle);
            newyT = T.y + len.G*sin(T.angle);
            line([T.y newyT], [T.x newxT],'color','g', 'linewidth',2);
            T.x = newxT;
            T.y = newyT;
        case '+'
            T.angle = T.angle + T.dangle*multiplier;
            multiplier = 1;
        case '-'
            T.angle = T.angle - T.dangle*multiplier;
            multiplier = 1;
        case '[' %push the stack
            stack(stkPtr).T.x = T.x ;
            stack(stkPtr).T.y = T.y ;
            stack(stkPtr).T.angle = T.angle ;
            stkPtr = stkPtr +1 ;
        case ']' %pop the stack
            stkPtr = stkPtr -1 ;
            T.x = stack(stkPtr).T.x ;
            T.y = stack(stkPtr).T.y ;
            T.angle = stack(stkPtr).T.angle ;
        otherwise
            disp('error')
            return
        end
    end

    axis equal
    figure(gcf)
end
